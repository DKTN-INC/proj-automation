name: SonarCloud Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]

jobs:
  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Ensure SONAR_TOKEN is present
        run: |
          if [ -z "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "Required secret SONAR_TOKEN is missing. Set it in repository settings -> Secrets." >&2
            exit 1
          else
            echo "SONAR_TOKEN found"
          fi

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Python dependencies and test tools
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt || true; fi
          python -m pip install pytest pytest-cov

      - name: Run tests and generate coverage
        run: |
          # Generate coverage.xml for SonarCloud
          pytest --maxfail=1 --disable-warnings -q --cov=. --cov-report=xml:coverage.xml || true

      - name: Run SonarCloud analysis (official action)
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          organization: ${{ secrets.SONAR_ORG }}
          token: ${{ secrets.SONAR_TOKEN }}
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
          # The action will locate the coverage.xml produced earlier
          extra-properties: |
            sonar.python.coverage.reportPaths=coverage.xml

      - name: Upload Sonar report (optional)
        if: always()
        run: echo "Sonar scan completed. Check SonarCloud/SonarQube UI for results."
